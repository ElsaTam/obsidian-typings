import type {
    App,
    Debouncer
} from 'obsidian';
import type { MapOfSets } from '../../Collections/MapOfSets.d.ts';
import type { CanvasViewData } from './CanvasData.d.ts';
import type { CanvasMenu } from './CanvasMenu.d.ts';
import type { CanvasRectEx } from './CanvasRectEx.d.ts';
import type { CanvasView } from './CanvasView.d.ts';
import type { CanvasViewCanvasEdge } from './CanvasViewCanvasEdge.d.ts';
import type { CanvasViewCanvasNode } from './CanvasViewCanvasNode.d.ts';
import type { CanvasViewConfig } from './CanvasViewConfig.d.ts';
import type { CanvasViewHistory } from './CanvasViewHistory.d.ts';
import type { EdgeIndex } from './EdgeIndex.d.ts';
import type { NodeInteractionLayer } from './NodeInteractionLayer.d.ts';
import type { Pointer } from './Pointer.d.ts';

/** @public */
export interface CanvasViewCanvas {
    app: App;
    backgroundPatternEl: SVGPatternElement;
    canvasControlsEl: HTMLDivElement;
    canvasEl: HTMLDivElement;
    canvasRect: CanvasRectEx;
    cardMenuEl: HTMLDivElement;
    config: CanvasViewConfig;
    data: CanvasViewData;
    dirty: Set<unknown>;
    edgeContainerEl: SVGElement;
    edgeEndContainerEl: SVGElement;
    edgeFrom: MapOfSets<CanvasViewCanvasEdge, CanvasViewCanvasNode>;
    edgeIndex: EdgeIndex;
    edges: Map<string, CanvasViewCanvasEdge>;
    edgeTo: MapOfSets<CanvasViewCanvasEdge, CanvasViewCanvasNode>;
    finishViewportAnimation: boolean;
    frame: number;
    frameWin: null;
    gridSpacing: number;
    history: CanvasViewHistory;
    isDragging: boolean;
    isHoldingSpace: boolean;
    keys: Object;
    lastEdgesInViewport: Set<CanvasViewCanvasEdge>;
    lastNodesInViewport: Set<CanvasViewCanvasNode>;
    menu: CanvasMenu;
    moved: Set<unknown>;
    moverEl: HTMLDivElement;
    nodeIndex: EdgeIndex;
    nodeInteractionLayer: NodeInteractionLayer;
    nodes: Map<string, CanvasViewCanvasNode>;
    options?: unknown;
    pauseAnimation: number;
    pointer: Pointer;
    pointerFrame: number;
    pointerFrameWin: null;
    quickSettingsButton: HTMLDivElement;
    readonly: boolean;
    redoBtnEl: HTMLDivElement;
    requestPushHistory: Debouncer<[], unknown>;
    requestUpdateFileOpen: Debouncer<[], unknown>;
    scale: number;
    screenshotting: boolean;
    selection: Set<Selection>;
    selectionChanged: boolean;
    snapDistance?: unknown;
    staleSelection: null;
    tx: number;
    ty: number;
    tZoom: number;
    undoBtnEl: HTMLDivElement;
    view: CanvasView;
    viewportChanged: boolean;
    wasAnimating: boolean;
    wrapperEl: HTMLDivElement;
    x: number;
    y: number;
    zIndexCounter: number;
    zoom: number;
    zoomBreakpoint?: unknown;
    zoomCenter: null;
    zoomToFitQueued: boolean;

    addEdge(arg1: unknown): unknown;
    addNode(arg1: unknown): unknown;
    applyHistory(arg1: unknown): unknown;
    cancelFrame(): unknown;
    canSnap(arg1: unknown): unknown;
    clear(): unknown;
    clearSnapPoints(): unknown;
    cloneData(arg1: unknown, arg2: unknown): unknown;
    createFileNode(arg1: unknown): unknown;
    createFileNodes(arg1: unknown, arg2: unknown): unknown;
    createGroupNode(arg1: unknown): unknown;
    createLinkNode(arg1: unknown): unknown;
    createPlaceholder(): unknown;
    createTextNode(arg1: unknown): unknown;
    deleteSelection(): unknown;
    deselect(arg1: unknown): unknown;
    deselectAll(): unknown;
    domFromPos(arg1: unknown): unknown;
    domPosFromClient(arg1: unknown): unknown;
    domPosFromEvt(arg1: unknown): unknown;
    dragTempNode(arg1: unknown, arg2: unknown, arg3: unknown): unknown;
    endSnapPointRendering(): unknown;
    generateHDImage(): Promise<unknown>;
    getContainingNodes(arg1: unknown): unknown;
    getData(): unknown;
    getEdgesForNode(arg1: unknown): unknown;
    getIntersectingEdges(arg1: unknown): unknown;
    getIntersectingNodes(arg1: unknown): unknown;
    getSelectionData(arg1: unknown): unknown;
    getSnapping(arg1: unknown, arg2: unknown, arg3: unknown, arg4: unknown): unknown;
    getState(): unknown;
    getViewportBBox(): unknown;
    getViewportNodes(arg1: unknown): unknown;
    getZIndex(): unknown;
    handleCopy(arg1: unknown): unknown;
    handleCut(arg1: unknown): unknown;
    handleDragToSelect(arg1: unknown, arg2: unknown, arg3: unknown): unknown;
    handleDragWithPan(arg1: unknown, arg2: unknown): unknown;
    handleMoverPointerdown(arg1: unknown): unknown;
    handlePaste(arg1: unknown): unknown;
    handleSelectionDrag(arg1: unknown, arg2: unknown, arg3: unknown): unknown;
    hitTestNode(arg1: unknown, arg2: unknown): unknown;
    importData(arg1: unknown, arg2: unknown): unknown;
    interactionHitTest(arg1: unknown): unknown;
    load(): unknown;
    markDirty(arg1: unknown): unknown;
    markMoved(arg1: unknown): unknown;
    markViewportChanged(): unknown;
    nudgeSelection(arg1: unknown, arg2: unknown): unknown;
    onContextMenu(arg1: unknown): unknown;
    onDoubleClick(arg1: unknown): unknown;
    onGlobalKeydown(arg1: unknown): unknown;
    onGlobalKeyup(arg1: unknown): unknown;
    onKeydown(arg1: unknown): unknown;
    onPointerdown(arg1: unknown): unknown;
    onPointermove(arg1: unknown): unknown;
    onPriorityPointerdown(arg1: unknown): unknown;
    onResize(): unknown;
    onSelectionContextMenu(arg1: unknown): unknown;
    onTouchdown(arg1: unknown): unknown;
    onWheel(arg1: unknown): unknown;
    overrideHistory(): unknown;
    panBy(arg1: unknown, arg2: unknown): unknown;
    panIntoView(arg1: unknown, arg2: unknown): unknown;
    panTo(arg1: unknown, arg2: unknown): unknown;
    posCenter(): unknown;
    posFromClient(arg1: unknown): unknown;
    posFromDom(arg1: unknown): unknown;
    posFromEvt(arg1: unknown): unknown;
    posInViewport(arg1: unknown): unknown;
    pushHistory(arg1: unknown): unknown;
    redo(): unknown;
    removeEdge(arg1: unknown): unknown;
    removeNode(arg1: unknown): unknown;
    renderSnapPoints(arg1: unknown, arg2: unknown, arg3: unknown, arg4: unknown): unknown;
    requestFrame(arg1: unknown): unknown;
    requestSave(arg1: unknown): unknown;
    rerenderViewport(): unknown;
    select(arg1: unknown): unknown;
    selectAll(arg1: unknown): unknown;
    selectOnly(arg1: unknown): unknown;
    setData(arg1: unknown): unknown;
    setDragging(arg1: unknown): unknown;
    setReadonly(arg1: unknown): unknown;
    setState(arg1: unknown): unknown;
    setViewport(arg1: unknown, arg2: unknown, arg3: unknown): unknown;
    showCreationMenu(arg1: unknown, arg2: unknown, arg3: unknown): unknown;
    showQuickSettingsMenu(arg1: unknown): unknown;
    smartZoom(arg1: unknown): unknown;
    takeScreenshot(arg1: unknown, arg2: unknown): Promise<unknown>;
    toggleGridSnapping(arg1: unknown): unknown;
    toggleObjectSnapping(arg1: unknown): unknown;
    toggleSelect(arg1: unknown): unknown;
    undo(): unknown;
    unload(): unknown;
    updateFileOpen(arg1: unknown): unknown;
    updateHistoryUI(): unknown;
    updateSelection(arg1: unknown): unknown;
    virtualize(): unknown;
    zoomBy(arg1: unknown, arg2: unknown): unknown;
    zoomToBbox(arg1: unknown): unknown;
    zoomToFit(): unknown;
    zoomToSelection(): unknown;
}
